{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\bih360-ejectBuild\\\\app\\\\SelectCityScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Overlay } from \"react-native-web/dist/index\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dialog, { DialogContent } from 'react-native-popup-dialog';\nimport ImageBG from \"./util/SelectCityIcon\";\nimport stackNav from \"./stacknav\";\nimport SideMenu from \"../SideMenu/SideMenu\";\nimport logowhiteicon from \"./util/LogoWhite\";\nimport { Ionicons, MaterialIcons } from '@expo/vector-icons';\nimport { fonts } from \"../styles/fonts\";\nimport { Font } from 'expo-font';\nimport { createAppContainer } from 'react-navigation';\nimport { createDrawerNavigator } from 'react-navigation-drawer';\n\nvar SelectCityScreen = function (_Component) {\n  _inherits(SelectCityScreen, _Component);\n\n  var _super = _createSuper(SelectCityScreen);\n\n  function SelectCityScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SelectCityScreen);\n\n    _this = _super.call(this, props);\n\n    _this.loadAssetsAsync = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                \"Roboto-Regular\": require(\"../assets/fonts/rregular.ttf\"),\n                \"Roboto-Medium\": require(\"../assets/fonts/rmedium.ttf\"),\n                \"Roboto-Light\": require(\"../assets/fonts/rlight.ttf\"),\n                \"Roboto-Bold\": require(\"../assets/fonts/rbold.ttf\")\n              }));\n\n            case 2:\n              _this.setState({\n                fontLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var drawernav = createDrawerNavigator({\n      Item1: {\n        screen: stackNav\n      }\n    }, {\n      contentComponent: SideMenu,\n      drawerWidth: Dimensions.get('window').width - 120\n    });\n    var Navigation = createAppContainer(drawernav);\n    _this.state = {\n      isLoaded: false,\n      nav: Navigation,\n      fontLoaded: false,\n      cities: [],\n      visible: false\n    };\n    return _this;\n  }\n\n  _createClass(SelectCityScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                \"Roboto-Regular\": require(\"../assets/fonts/rregular.ttf\"),\n                \"Roboto-Medium\": require(\"../assets/fonts/rmedium.ttf\"),\n                \"Roboto-Light\": require(\"../assets/fonts/rlight.ttf\"),\n                \"Roboto-Bold\": require(\"../assets/fonts/rbold.ttf\")\n              }));\n\n            case 2:\n              this.setState({\n                fontLoaded: true\n              });\n              this.loadAssetsAsync();\n              fetch('https://api.360bih.ba/api/cities').then(function (response) {\n                return response.json();\n              }).then(function (responseJson) {\n                console.log(responseJson);\n\n                _this2.setState({\n                  isLoading: false,\n                  cities: responseJson\n                }, function () {});\n              }).catch(function (error) {\n                console.error(error);\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timeoutHandle);\n    }\n  }, {\n    key: \"selectCity\",\n    value: function selectCity(city) {\n      var _this3 = this;\n\n      console.log(city.name);\n      this.setState({\n        component: React.createElement(\"stackNav\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 32\n          }\n        }),\n        visible: false,\n        myCity: city\n      });\n      this.timeoutHandle = setTimeout(function () {\n        _this3.setState({\n          component: React.createElement(\"stackNav\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 34\n            }\n          }),\n          isLoaded: true\n        });\n      }, 500);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var ticketItem = function ticketItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            marginLeft: 20,\n            marginTop: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          expo: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          style: {\n            width: 66,\n            height: 58\n          },\n          source: {\n            uri: 'https://www.smartcitiesworld.net/AcuCustom/Sitename/DAM/019/Sydney_Harbour_at_night_Adobe.jpg'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }\n        })), React.createElement(View, {\n          style: {\n            marginLeft: 16\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 18\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"#4A4A4A\",\n            fontSize: 20,\n            width: Dimensions.get(\"screen\").width - 64,\n            height: 32\n          },\n          onPress: function onPress() {\n            _this4.selectCity(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 18\n          }\n        }, item.name), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 23\n          }\n        }, \"Objects\")));\n      };\n\n      var Navigation = this.state.nav;\n\n      if (!this.state.fontLoaded) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 14\n          }\n        });\n      }\n\n      if (this.state.isLoaded) {\n        return React.createElement(Navigation, {\n          screenProps: this.state.myCity,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }\n      }, React.createElement(ImageBackground, {\n        source: {\n          uri: ImageBG\n        },\n        resizeMode: \"cover\",\n        style: {\n          flex: 1\n        },\n        imageStyle: {\n          opacity: 0.3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          alignContent: \"center\",\n          width: Dimensions.get('screen').width,\n          height: 68\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          alignContent: \"center\",\n          width: Dimensions.get('screen').width,\n          marginTop: 29\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: \"Roboto-Bold\",\n          color: \"#3f4968\",\n          fontSize: 32,\n          alignItems: \"center\",\n          alignContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, \"Istra\\u017Ei 360BiH\")), React.createElement(View, {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          alignContent: \"center\",\n          width: Dimensions.get('screen').width,\n          marginTop: 29\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: \"Roboto-Regular\",\n          justifyContent: \"center\",\n          display: \"flex\",\n          textAlign: \"center\",\n          color: \"#3f4968\",\n          fontSize: 16,\n          alignItems: \"center\",\n          alignContent: \"center\",\n          marginLeft: 16,\n          marginRight: 16,\n          marginTop: 24,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, \"360BiH predstavlja novu vrstu ogla\\u0161iva\\u010Dkog internetskog medija putem koje je mogu\\u0107a promocija lokalnih sadr\\u017Eaja iz raznih sfera \\u017Eivota.Na\\u0161 je primarni cilj, digitalnim putem pru\\u017Eiti novo i druga\\u010Dije korisni\\u010Dko iskustvo kroz nove vidove ogla\\u0161avanja i razli\\u010Dite vrste virtualnih \\u0161etnji kroz prostor.\"))), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 14\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginTop: 16,\n          marginLeft: 16,\n          height: 56,\n          color: \"#3f4968\",\n          fontSize: 40,\n          fontFamily: \"Roboto-Bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 14\n        }\n      }, \"Odaberite grad\"), React.createElement(SafeAreaView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 14\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.cities,\n        renderItem: ticketItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }\n      }))));\n    }\n  }]);\n\n  return SelectCityScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default SelectCityScreen;","map":{"version":3,"sources":["C:/Users/pc/Desktop/bih360-ejectBuild/app/SelectCityScreen.js"],"names":["React","Component","Overlay","Dialog","DialogContent","ImageBG","stackNav","SideMenu","logowhiteicon","Ionicons","MaterialIcons","fonts","Font","createAppContainer","createDrawerNavigator","SelectCityScreen","props","loadAssetsAsync","loadAsync","require","setState","fontLoaded","drawernav","Item1","screen","contentComponent","drawerWidth","Dimensions","get","width","Navigation","state","isLoaded","nav","cities","visible","fetch","then","response","json","responseJson","console","log","isLoading","catch","error","clearTimeout","timeoutHandle","city","name","component","myCity","setTimeout","ticketItem","item","flexDirection","marginLeft","marginTop","height","uri","color","fontSize","selectCity","styles","container","flex","opacity","display","justifyContent","alignItems","alignContent","fontFamily","textAlign","marginRight","fontWeight","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Text,\n  View,\n  StyleSheet,\n  Image,\n  Dimensions,\n  Overlay,\n  ImageBackground,\n  TouchableOpacity,\n  ScrollView,\n  SafeAreaView, \n  StatusBar,\n  Platform,FlatList\n} from 'react-native';\n\nimport Dialog, { DialogContent } from 'react-native-popup-dialog';\nimport ImageBG from './util/SelectCityIcon';\nimport stackNav from './stacknav';\nimport SideMenu from '../SideMenu/SideMenu'\nimport logowhiteicon from \"./util/LogoWhite\";\n\nimport { Ionicons, MaterialIcons } from '@expo/vector-icons';\n\nimport { fonts } from '../styles/fonts';\n\nimport { Font } from 'expo-font';\n\nimport {  createAppContainer } from 'react-navigation';\nimport { createDrawerNavigator } from 'react-navigation-drawer';\nclass SelectCityScreen extends Component {\n\n\n  constructor(props) {\n    super(props)\n    const drawernav = createDrawerNavigator({\n      Item1: {\n        screen: stackNav,\n      }\n    }, {\n        contentComponent: SideMenu,\n        drawerWidth: Dimensions.get('window').width - 120,\n      });\n    const Navigation = createAppContainer(drawernav);\n    this.state = {\n      isLoaded: false,\n      nav: Navigation,\n      fontLoaded: false,\n      cities: [],\n      visible: false,\n    }\n  }\n  async componentDidMount() {\n    await Font.loadAsync({\n      \"Roboto-Regular\": require(\"../assets/fonts/rregular.ttf\"),\n      \"Roboto-Medium\": require(\"../assets/fonts/rmedium.ttf\"),\n      \"Roboto-Light\": require(\"../assets/fonts/rlight.ttf\"),\n      \"Roboto-Bold\": require(\"../assets/fonts/rbold.ttf\"),\n    })\n    this.setState({ fontLoaded: true })\n    this.loadAssetsAsync()\n    \n    fetch('https://api.360bih.ba/api/cities')\n      .then((response) => response.json())\n      .then((responseJson) => {\nconsole.log(responseJson);\n        this.setState({\n          isLoading: false,\n          cities: responseJson,\n        }, function () {\n\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n\n    // Start counting when the page is loaded\n    /*this.timeoutHandle = setTimeout(() => {\n      // Add your logic for the transition\n      this.setState({ component: <stackNav></stackNav>, isLoaded: false })\n    }, 5000);*/\n  }\n  loadAssetsAsync = async () => {\n    await Font.loadAsync({\n      \"Roboto-Regular\": require(\"../assets/fonts/rregular.ttf\"),\n      \"Roboto-Medium\": require(\"../assets/fonts/rmedium.ttf\"),\n      \"Roboto-Light\": require(\"../assets/fonts/rlight.ttf\"),\n      \"Roboto-Bold\": require(\"../assets/fonts/rbold.ttf\"),\n    })\n    this.setState({ fontLoaded: true })\n  }\n  componentWillUnmount() {\n    clearTimeout(this.timeoutHandle);\n  }\n\n\n\n  selectCity(city) {\n    console.log(city.name);\n    this.setState({ component: <stackNav></stackNav>, visible:false, myCity: city })\n    this.timeoutHandle = setTimeout(() => {\n      // Add your logic for the transition\n      this.setState({ component: <stackNav></stackNav>, isLoaded: true })\n    }, 500);\n\n  }\n\n  render() {\n  \n    const ticketItem = ({item}) => {\n        \n      return (\n          <View style={{ flexDirection:'row', marginLeft: 20,marginTop:20}}>\n            <View expo >\n            <Image\n          style={ {\n            width: 66,\n            height: 58,\n          }}          source={{uri: 'https://www.smartcitiesworld.net/AcuCustom/Sitename/DAM/019/Sydney_Harbour_at_night_Adobe.jpg'}}\n        /></View><View style={{  marginLeft: 16}}>\n                 <Text style={{ color: \"#4A4A4A\", fontSize: 20, width: Dimensions.get(\"screen\").width - 64, height: 32 }} onPress={() => {\n                      this.selectCity(item);\n                    }}>\n                        {item.name}\n                      </Text>\n                      <Text>Objects</Text>\n                      </View>\n          </View>\n      );\n  };\n    const Navigation = this.state.nav;\n    if (!this.state.fontLoaded) {\n      return <View />;\n    }\n    if (this.state.isLoaded) {\n      return (<Navigation screenProps={this.state.myCity} />)\n    }\n    return (\n      <View style={styles.container}>\n        <ImageBackground source={{ uri: ImageBG }} resizeMode={\"cover\"} style={{  flex: 1}} imageStyle= {{opacity:0.3}}>\n          <View style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", alignContent: \"center\", width: Dimensions.get('screen').width, height:68, }}>\n            {/* <Image source={{ uri: logowhiteicon }} style={{ marginLeft: 16, marginTop: 40, height: 28, width: 100, }} /> */}\n          </View>\n\n          <View style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", alignContent: \"center\", width: Dimensions.get('screen').width, marginTop: 29 }}>\n            <Text style={{ fontFamily: \"Roboto-Bold\", color: \"#3f4968\", fontSize: 32, alignItems: \"center\", alignContent: \"center\" }}>\n              Istraži 360BiH\n                </Text>\n          </View>\n          <View style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", alignContent: \"center\", width: Dimensions.get('screen').width, marginTop: 29 }}>\n            <Text style={{ fontFamily: \"Roboto-Regular\", justifyContent: \"center\", display: \"flex\", textAlign: \"center\", color: \"#3f4968\", fontSize: 16, alignItems: \"center\", alignContent: \"center\", marginLeft: 16, marginRight: 16, marginTop: 24,\n        fontWeight: 'bold', }}>\n              360BiH predstavlja novu vrstu oglašivačkog internetskog medija putem koje je moguća promocija lokalnih sadržaja iz raznih sfera života.Naš je primarni cilj, digitalnim putem pružiti novo i drugačije korisničko iskustvo kroz nove vidove oglašavanja i različite vrste virtualnih šetnji kroz prostor.\n                </Text>\n          </View >     \n             </ImageBackground>\n             <View style={styles.container}>\n             <Text style={{ \n               marginTop: 16, marginLeft: 16, height: 56, color: \"#3f4968\" ,fontSize: 40, fontFamily: \"Roboto-Bold\" }}>\n                Odaberite grad\n                </Text>\n             <SafeAreaView style={styles.container}>\n      <FlatList\n        data={this.state.cities}\n                renderItem={ticketItem}\n      />\n    </SafeAreaView></View>\n\n{/*<View style={{  flex: 1,}}>\n          <TouchableOpacity onPress={() => {\n            this.setState({ visible: true });\n          }}>\n            <View style={{ display: \"flex\", flexDirection: \"row\", alignContent: \"space-between\", justifyContent: \"space-between\", marginTop: 49, marginLeft: 16, marginRight: 16, height: 56, borderRadius: 4, backgroundColor: \"#ffffff\", width: Dimensions.get(\"screen\").width - 32 }}>\n              <Text style={{ marginTop: 16, marginLeft: 16, height: 56, color: \"#666666\", fontSize: 16, fontFamily: \"Roboto-Bold\" }}>\n                {this.state.myCity?this.state.myCity.name:\"Odaberite grad\"}\n                </Text>\n              <View style={{ margin: 16 }}>\n                <MaterialIcons name=\"arrow-drop-down\" size={24} color=\"#757575\" />\n              </View>\n            </View>\n          </TouchableOpacity>\n\n          <Dialog style={{ marginLeft: 16, marginRight: 16 }}\n            visible={this.state.visible}\n            onTouchOutside={() => {\n              this.setState({ visible: false });\n            }}\n          >\n            <DialogContent style={{ paddingTop: 16, height: 250 }}>\n              <ScrollView style={{ height: 250 }}>\n                {this.state.cities.map((city, index) => {\n                  return (\n                    <TouchableOpacity onPress={() => {\n                      this.selectCity(city);\n                    }}>\n                      <Text style={{ color: \"#4A4A4A\", fontSize: 16, width: Dimensions.get(\"screen\").width - 64, height: 32 }}>\n                        {city.name}\n                      </Text>\n                    </TouchableOpacity>\n                  );\n                })}\n              </ScrollView>\n\n            </DialogContent>\n          </Dialog>\n          <Text>\n          </Text>\n              </View>*/}\n      </View>\n    );\n\n\n  }\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nexport default SelectCityScreen;"]},"metadata":{},"sourceType":"module"}